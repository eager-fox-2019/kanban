{"remainingRequest":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/src/views/Home.vue","mtime":1558246804569},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport TaskList from '@/components/TaskList.vue'\nimport Empty from '@/components/Empty.vue'\nimport db from '@/api/firebase.js'\n\nexport default {\n  components: {\n    TaskList,\n    Empty\n  },\n  data () {\n    return {\n      panels: [\n        {\n          text: 'Plan',\n          color: 'error',\n          task: []\n        },\n        {\n          text: 'Todo',\n          color: 'warning',\n          task: []\n        },\n        {\n          text: 'Ongoing',\n          color: 'primary',\n          task: []\n        },\n        {\n          text: 'Done',\n          color: 'success',\n          task: []\n        }\n      ]\n    }\n  },\n  methods: {\n    fetchTasks () {\n      db.collection('tasks')\n        .onSnapshot((querySnapshot) => {\n          this.panels[0].task = []\n          this.panels[1].task = []\n          this.panels[2].task = []\n          this.panels[3].task = []\n\n          querySnapshot.forEach((doc) => {\n            const obj = { ...doc.data(), id: doc.id }\n            if (obj.status === 'plan') this.panels[0].task.push(obj)\n            else if (obj.status === 'todo') this.panels[1].task.push(obj)\n            else if (obj.status === 'ongoing') this.panels[2].task.push(obj)\n            else if (obj.status === 'done') this.panels[3].task.push(obj)\n          })\n        })\n    }\n  },\n  created () {\n    this.fetchTasks()\n  },\n  computed: {\n    isEmpty () {\n      if (\n        this.panels[0].task.length === 0 &&\n        this.panels[1].task.length === 0 &&\n        this.panels[2].task.length === 0 &&\n        this.panels[3].task.length === 0\n      ) return true\n      else return false\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <v-layout pa-4 align-start justify-space-around row fill-height>\n      <div v-for=\"panel in panels\" :key=\"panel.text\">\n        <TaskList :panel=\"panel\"/>\n      </div>\n    </v-layout>\n    <v-layout pa-4 align-start justify-space-around row fill-height>\n      <Empty v-if=\"isEmpty\"/>\n    </v-layout>\n  </div>\n</template>\n\n<script>\n\nimport TaskList from '@/components/TaskList.vue'\nimport Empty from '@/components/Empty.vue'\nimport db from '@/api/firebase.js'\n\nexport default {\n  components: {\n    TaskList,\n    Empty\n  },\n  data () {\n    return {\n      panels: [\n        {\n          text: 'Plan',\n          color: 'error',\n          task: []\n        },\n        {\n          text: 'Todo',\n          color: 'warning',\n          task: []\n        },\n        {\n          text: 'Ongoing',\n          color: 'primary',\n          task: []\n        },\n        {\n          text: 'Done',\n          color: 'success',\n          task: []\n        }\n      ]\n    }\n  },\n  methods: {\n    fetchTasks () {\n      db.collection('tasks')\n        .onSnapshot((querySnapshot) => {\n          this.panels[0].task = []\n          this.panels[1].task = []\n          this.panels[2].task = []\n          this.panels[3].task = []\n\n          querySnapshot.forEach((doc) => {\n            const obj = { ...doc.data(), id: doc.id }\n            if (obj.status === 'plan') this.panels[0].task.push(obj)\n            else if (obj.status === 'todo') this.panels[1].task.push(obj)\n            else if (obj.status === 'ongoing') this.panels[2].task.push(obj)\n            else if (obj.status === 'done') this.panels[3].task.push(obj)\n          })\n        })\n    }\n  },\n  created () {\n    this.fetchTasks()\n  },\n  computed: {\n    isEmpty () {\n      if (\n        this.panels[0].task.length === 0 &&\n        this.panels[1].task.length === 0 &&\n        this.panels[2].task.length === 0 &&\n        this.panels[3].task.length === 0\n      ) return true\n      else return false\n    }\n  }\n}\n</script>\n"]}]}