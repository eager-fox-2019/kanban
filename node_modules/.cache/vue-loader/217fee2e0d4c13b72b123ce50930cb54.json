{"remainingRequest":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/src/App.vue","mtime":1558246595403},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rizkyanas25/Hacktiv8/phase2/week3/3wednesday/kanban/kanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Swal from 'sweetalert2'\nimport db from '@/api/firebase.js'\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      newTask: {\n        title: '',\n        description: '',\n        point: 0,\n        assignedTo: '',\n        status: 'plan'\n      }\n      //\n    }\n  },\n  methods: {\n    check () {\n      if (this.newTask.title && this.newTask.description && this.newTask.point && this.newTask.assignedTo) {\n        this.addNewTask()\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Please fill all fields'\n        })\n          .then(() => {\n            this.newTaskForm()\n          })\n      }\n    },\n    addNewTask () {\n      console.log(this.newTask)\n      let timerInterval\n      Swal.fire({\n        title: 'Creating new task',\n        timer: 2000,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n          timerInterval = setInterval(() => {\n          }, 100)\n        },\n        onClose: () => {\n          clearInterval(timerInterval)\n        }\n      }).then((result) => {\n        if (\n          // Read more about handling dismissals\n          result.dismiss === Swal.DismissReason.timer\n        ) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'bottom-center',\n            showConfirmButton: false,\n            timer: 3000\n          })\n          Toast.fire({\n            type: 'success',\n            title: 'New task added'\n          })\n          db.collection('tasks')\n            .add(this.newTask)\n            .then((docRef) => {\n              console.log('Document written with ID: ', docRef.id)\n            })\n            .catch((error) => {\n              console.error('Error adding document: ', error)\n            })\n        }\n      })\n    },\n    newTaskForm () {\n      Swal.fire({\n        title: 'Submit your new task!',\n        html:\n        `\n        <input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"Title..\" autocomplete=\"off\" autofocus>\n        <input id=\"swal-input2\" class=\"swal2-input\" type=\"text\" placeholder=\"Assigned to..\" autocomplete=\"off\">\n        <textarea id=\"swal-input4\"class=\"swal2-textarea\" placeholder=\"Description..\" style=\"display: flex;\"></textarea>\n        <div style=\"\">\n          <input id=\"swal-input3\" class=\"form-control\" type=\"number\" placeholder=\"Point..\" autocomplete=\"off\" min=\"0\" style=\"font-size: 18px; height: 45px; border: 1px solid #d8d8d8; border-radius: 5px; padding-left: 15px;\">\n        </div>\n        `,\n        confirmButtonText: 'Submit',\n        showCancelButton: true\n      })\n        .then(({ value }) => {\n          if (value) {\n            this.newTask.title = document.getElementById('swal-input1').value\n            this.newTask.assignedTo = document.getElementById('swal-input2').value\n            this.newTask.point = document.getElementById('swal-input3').value\n            this.newTask.description = document.getElementById('swal-input4').value\n            this.check()\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    },\n    loading () {\n      let timerInterval\n      Swal.fire({\n        title: 'Welcome !',\n        html: `<h2>Fetching data...</h2>`,\n        timer: 2500,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n          timerInterval = setInterval(() => {\n          }, 100)\n        },\n        onClose: () => {\n          clearInterval(timerInterval)\n        }\n      }).then((result) => {\n        if (\n          // Read more about handling dismissals\n          result.dismiss === Swal.DismissReason.timer\n        ) {\n        }\n      })\n    }\n  },\n  created () {\n    this.loading()\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app >\n    <v-toolbar app>\n      <v-toolbar-title class=\"headline text-uppercase\">\n        <v-img src=\"https://www.macupdate.com/images/icons256/58278.png\" width=\"60px\" style=\"margin-top:0px\"></v-img>\n        <p style=\"margin-top:-45px; margin-left:65px\">Kanban 看板</p>\n      </v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn class=\"mr-5\" color=\"gray\" v-on:click=\"newTaskForm()\">Add new task</v-btn>\n    </v-toolbar>\n\n    <v-content>\n      <router-view/>\n    </v-content>\n\n    <v-footer id='footer' dark height=\"auto\">\n      <v-card\n        class=\"flex\"\n        flat\n        tile\n      >\n        <v-card-actions class=\"grey darken-3 justify-center\">\n          <strong class=\"mr-2\"> Rizky Anas Bukhori</strong>&copy;2019\n        </v-card-actions>\n      </v-card>\n    </v-footer>\n  </v-app>\n</template>\n\n<script>\nimport Swal from 'sweetalert2'\nimport db from '@/api/firebase.js'\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      newTask: {\n        title: '',\n        description: '',\n        point: 0,\n        assignedTo: '',\n        status: 'plan'\n      }\n      //\n    }\n  },\n  methods: {\n    check () {\n      if (this.newTask.title && this.newTask.description && this.newTask.point && this.newTask.assignedTo) {\n        this.addNewTask()\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Please fill all fields'\n        })\n          .then(() => {\n            this.newTaskForm()\n          })\n      }\n    },\n    addNewTask () {\n      console.log(this.newTask)\n      let timerInterval\n      Swal.fire({\n        title: 'Creating new task',\n        timer: 2000,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n          timerInterval = setInterval(() => {\n          }, 100)\n        },\n        onClose: () => {\n          clearInterval(timerInterval)\n        }\n      }).then((result) => {\n        if (\n          // Read more about handling dismissals\n          result.dismiss === Swal.DismissReason.timer\n        ) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'bottom-center',\n            showConfirmButton: false,\n            timer: 3000\n          })\n          Toast.fire({\n            type: 'success',\n            title: 'New task added'\n          })\n          db.collection('tasks')\n            .add(this.newTask)\n            .then((docRef) => {\n              console.log('Document written with ID: ', docRef.id)\n            })\n            .catch((error) => {\n              console.error('Error adding document: ', error)\n            })\n        }\n      })\n    },\n    newTaskForm () {\n      Swal.fire({\n        title: 'Submit your new task!',\n        html:\n        `\n        <input id=\"swal-input1\" class=\"swal2-input\" type=\"text\" placeholder=\"Title..\" autocomplete=\"off\" autofocus>\n        <input id=\"swal-input2\" class=\"swal2-input\" type=\"text\" placeholder=\"Assigned to..\" autocomplete=\"off\">\n        <textarea id=\"swal-input4\"class=\"swal2-textarea\" placeholder=\"Description..\" style=\"display: flex;\"></textarea>\n        <div style=\"\">\n          <input id=\"swal-input3\" class=\"form-control\" type=\"number\" placeholder=\"Point..\" autocomplete=\"off\" min=\"0\" style=\"font-size: 18px; height: 45px; border: 1px solid #d8d8d8; border-radius: 5px; padding-left: 15px;\">\n        </div>\n        `,\n        confirmButtonText: 'Submit',\n        showCancelButton: true\n      })\n        .then(({ value }) => {\n          if (value) {\n            this.newTask.title = document.getElementById('swal-input1').value\n            this.newTask.assignedTo = document.getElementById('swal-input2').value\n            this.newTask.point = document.getElementById('swal-input3').value\n            this.newTask.description = document.getElementById('swal-input4').value\n            this.check()\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    },\n    loading () {\n      let timerInterval\n      Swal.fire({\n        title: 'Welcome !',\n        html: `<h2>Fetching data...</h2>`,\n        timer: 2500,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n          timerInterval = setInterval(() => {\n          }, 100)\n        },\n        onClose: () => {\n          clearInterval(timerInterval)\n        }\n      }).then((result) => {\n        if (\n          // Read more about handling dismissals\n          result.dismiss === Swal.DismissReason.timer\n        ) {\n        }\n      })\n    }\n  },\n  created () {\n    this.loading()\n  }\n}\n</script>\n\n<style>\nbody {\n  padding-right: 0px !important\n}\n</style>\n"]}]}